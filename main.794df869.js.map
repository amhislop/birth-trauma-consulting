{"version":3,"sources":["js/main.js"],"names":["activeSection","pageLinks","document","querySelectorAll","sections","hamburgerButton","querySelector","navOpen","addEventListener","e","preventDefault","classList","toggle","forEach","link","targetLink","href","match","targetElement","getElementById","matches","remove","scrollIntoView","behavior"],"mappings":";AAAA,IAKIA,EALEC,EAAYC,SAASC,iBAAiB,iBACtCC,EAAWF,SAASC,iBAAiB,WACrCE,EAAkBH,SAASI,cAAc,uBAE3CC,GAAU,EAIdF,EAAgBG,iBAAiB,QAAS,SAAUC,GAClDA,EAAEC,iBACFL,EAAgBM,UAAUC,OAAO,UAKnCX,EAAUY,QAAQ,SAACC,GACjBA,OAAAA,EAAKN,iBAAiB,QAAS,SAAUC,GACvCA,EAAEC,iBACIK,IAAAA,EAAaD,EAAKE,KAAKC,MAAM,aAAa,GAC1CC,EAAgBhB,SAASiB,eAAeJ,GAE1CD,EAAKM,QAAQ,kBACff,EAAgBM,UAAUU,OAAO,QAG7BH,GACJA,EAAcI,eAAe,CAAEC,SAAU","file":"main.794df869.js","sourceRoot":"..","sourcesContent":["const pageLinks = document.querySelectorAll(\"a[href^='/#']\");\nconst sections = document.querySelectorAll('section');\nconst hamburgerButton = document.querySelector('.nav-open-hamburger');\n\nlet navOpen = false;\nlet activeSection;\n\n// Mobile button\nhamburgerButton.addEventListener('click', function (e) {\n  e.preventDefault();\n  hamburgerButton.classList.toggle('open');\n});\n\n// Smooth scroll\n// Navigation Links\npageLinks.forEach((link) =>\n  link.addEventListener('click', function (e) {\n    e.preventDefault();\n    const targetLink = link.href.match(/.*\\/#(.*)/)[1];\n    const targetElement = document.getElementById(targetLink);\n\n    if (link.matches('.open + nav a')) {\n      hamburgerButton.classList.remove('open');\n    }\n\n    if (!!targetElement) {\n      targetElement.scrollIntoView({ behavior: 'smooth' });\n    }\n  })\n);\n\n// Seciton observers\n// const observables = [...navigationLinks].map((link) =>\n//   document.getElementById(link.href.match(/.*\\/#(.*)/)[1])\n// );\n\n// const observer = new IntersectionObserver(handleIntersect, {\n//   // If the image gets within 500px in the Y axis, start the download.\n//   rootMargin: '-50px 50px',\n//   threshold: 0.01,\n// });\n// observables.forEach((item) => {\n//   observer.observe(item);\n// });\n// // observer.observe(observables);\n\n// function handleIntersect(entries, observer) {\n//   entries.forEach((entry) => {\n//     if (entry.intersectionRatio > 0) {\n//       // remove active nav item\n//       // if(activeSection) activeSection\n//       // set active nav item\n//       console.log(entry.target);\n//     } else if (entry.intersectionRatio < 0) {\n//       console.log(entry.target, 'yeah');\n//     }\n//   });\n// }\n"]}